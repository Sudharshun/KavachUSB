/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2016-02-18 22:11:37 UTC)
 * on 2016-03-27 at 08:37:58 UTC 
 * Modify at your own risk.
 */

package com.appspot.kavachhq.garudaapi;

/**
 * Service definition for Garudaapi (v1).
 *
 * <p>
 * An API to manage Kavach HealthStatus Info
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link GarudaapiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Garudaapi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the garudaapi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://kavachhq.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "garudaapi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Garudaapi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Garudaapi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the GarudaapiOperations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Garudaapi garudaapi = new Garudaapi(...);}
   *   {@code Garudaapi.GarudaapiOperations.List request = garudaapi.garudaapi().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public GarudaapiOperations garudaapi() {
    return new GarudaapiOperations();
  }

  /**
   * The "garudaapi" collection of methods.
   */
  public class GarudaapiOperations {

    /**
     * Create a request for the method "garudaapi.addcheckin".
     *
     * This request holds the parameters needed by the garudaapi server.  After setting any optional
     * parameters, call the {@link Addcheckin#execute()} method to invoke the remote operation.
     *
     * @param aid
     * @param aemail
     * @param hs
     * @param lat
     * @param longt
     * @return the request
     */
    public Addcheckin addcheckin(java.lang.String aid, java.lang.String aemail, java.lang.String hs, java.lang.String lat, java.lang.String longt) throws java.io.IOException {
      Addcheckin result = new Addcheckin(aid, aemail, hs, lat, longt);
      initialize(result);
      return result;
    }

    public class Addcheckin extends GarudaapiRequest<com.appspot.kavachhq.garudaapi.model.Container> {

      private static final String REST_PATH = "putThing/{aid}/{aemail}/{hs}/{lat}/{longt}";

      /**
       * Create a request for the method "garudaapi.addcheckin".
       *
       * This request holds the parameters needed by the the garudaapi server.  After setting any
       * optional parameters, call the {@link Addcheckin#execute()} method to invoke the remote
       * operation. <p> {@link
       * Addcheckin#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param aid
       * @param aemail
       * @param hs
       * @param lat
       * @param longt
       * @since 1.13
       */
      protected Addcheckin(java.lang.String aid, java.lang.String aemail, java.lang.String hs, java.lang.String lat, java.lang.String longt) {
        super(Garudaapi.this, "POST", REST_PATH, null, com.appspot.kavachhq.garudaapi.model.Container.class);
        this.aid = com.google.api.client.util.Preconditions.checkNotNull(aid, "Required parameter aid must be specified.");
        this.aemail = com.google.api.client.util.Preconditions.checkNotNull(aemail, "Required parameter aemail must be specified.");
        this.hs = com.google.api.client.util.Preconditions.checkNotNull(hs, "Required parameter hs must be specified.");
        this.lat = com.google.api.client.util.Preconditions.checkNotNull(lat, "Required parameter lat must be specified.");
        this.longt = com.google.api.client.util.Preconditions.checkNotNull(longt, "Required parameter longt must be specified.");
      }

      @Override
      public Addcheckin setAlt(java.lang.String alt) {
        return (Addcheckin) super.setAlt(alt);
      }

      @Override
      public Addcheckin setFields(java.lang.String fields) {
        return (Addcheckin) super.setFields(fields);
      }

      @Override
      public Addcheckin setKey(java.lang.String key) {
        return (Addcheckin) super.setKey(key);
      }

      @Override
      public Addcheckin setOauthToken(java.lang.String oauthToken) {
        return (Addcheckin) super.setOauthToken(oauthToken);
      }

      @Override
      public Addcheckin setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Addcheckin) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Addcheckin setQuotaUser(java.lang.String quotaUser) {
        return (Addcheckin) super.setQuotaUser(quotaUser);
      }

      @Override
      public Addcheckin setUserIp(java.lang.String userIp) {
        return (Addcheckin) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String aid;

      /**

       */
      public java.lang.String getAid() {
        return aid;
      }

      public Addcheckin setAid(java.lang.String aid) {
        this.aid = aid;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String aemail;

      /**

       */
      public java.lang.String getAemail() {
        return aemail;
      }

      public Addcheckin setAemail(java.lang.String aemail) {
        this.aemail = aemail;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String hs;

      /**

       */
      public java.lang.String getHs() {
        return hs;
      }

      public Addcheckin setHs(java.lang.String hs) {
        this.hs = hs;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String lat;

      /**

       */
      public java.lang.String getLat() {
        return lat;
      }

      public Addcheckin setLat(java.lang.String lat) {
        this.lat = lat;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String longt;

      /**

       */
      public java.lang.String getLongt() {
        return longt;
      }

      public Addcheckin setLongt(java.lang.String longt) {
        this.longt = longt;
        return this;
      }

      @Override
      public Addcheckin set(String parameterName, Object value) {
        return (Addcheckin) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "garudaapi.getcheckins".
     *
     * This request holds the parameters needed by the garudaapi server.  After setting any optional
     * parameters, call the {@link Getcheckins#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Getcheckins getcheckins() throws java.io.IOException {
      Getcheckins result = new Getcheckins();
      initialize(result);
      return result;
    }

    public class Getcheckins extends GarudaapiRequest<com.appspot.kavachhq.garudaapi.model.Container> {

      private static final String REST_PATH = "container";

      /**
       * Create a request for the method "garudaapi.getcheckins".
       *
       * This request holds the parameters needed by the the garudaapi server.  After setting any
       * optional parameters, call the {@link Getcheckins#execute()} method to invoke the remote
       * operation. <p> {@link
       * Getcheckins#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Getcheckins() {
        super(Garudaapi.this, "GET", REST_PATH, null, com.appspot.kavachhq.garudaapi.model.Container.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Getcheckins setAlt(java.lang.String alt) {
        return (Getcheckins) super.setAlt(alt);
      }

      @Override
      public Getcheckins setFields(java.lang.String fields) {
        return (Getcheckins) super.setFields(fields);
      }

      @Override
      public Getcheckins setKey(java.lang.String key) {
        return (Getcheckins) super.setKey(key);
      }

      @Override
      public Getcheckins setOauthToken(java.lang.String oauthToken) {
        return (Getcheckins) super.setOauthToken(oauthToken);
      }

      @Override
      public Getcheckins setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Getcheckins) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Getcheckins setQuotaUser(java.lang.String quotaUser) {
        return (Getcheckins) super.setQuotaUser(quotaUser);
      }

      @Override
      public Getcheckins setUserIp(java.lang.String userIp) {
        return (Getcheckins) super.setUserIp(userIp);
      }

      @Override
      public Getcheckins set(String parameterName, Object value) {
        return (Getcheckins) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Garudaapi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Garudaapi}. */
    @Override
    public Garudaapi build() {
      return new Garudaapi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link GarudaapiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setGarudaapiRequestInitializer(
        GarudaapiRequestInitializer garudaapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(garudaapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
